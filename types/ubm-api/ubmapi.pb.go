// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types/ubm-api/ubmapi.proto

package ubmapi

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UBM struct {
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are valid to be assigned to Content:
	//	*UBM_Message
	Content              isUBM_Content `protobuf_oneof:"content"`
	Self                 *User         `protobuf:"bytes,3,opt,name=self,proto3" json:"self,omitempty"`
	Date                 int64         `protobuf:"varint,4,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UBM) Reset()         { *m = UBM{} }
func (m *UBM) String() string { return proto.CompactTextString(m) }
func (*UBM) ProtoMessage()    {}
func (*UBM) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{0}
}

func (m *UBM) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UBM.Unmarshal(m, b)
}
func (m *UBM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UBM.Marshal(b, m, deterministic)
}
func (m *UBM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UBM.Merge(m, src)
}
func (m *UBM) XXX_Size() int {
	return xxx_messageInfo_UBM.Size(m)
}
func (m *UBM) XXX_DiscardUnknown() {
	xxx_messageInfo_UBM.DiscardUnknown(m)
}

var xxx_messageInfo_UBM proto.InternalMessageInfo

func (m *UBM) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type isUBM_Content interface {
	isUBM_Content()
}

type UBM_Message struct {
	Message *Message `protobuf:"bytes,2,opt,name=message,proto3,oneof"`
}

func (*UBM_Message) isUBM_Content() {}

func (m *UBM) GetContent() isUBM_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *UBM) GetMessage() *Message {
	if x, ok := m.GetContent().(*UBM_Message); ok {
		return x.Message
	}
	return nil
}

func (m *UBM) GetSelf() *User {
	if m != nil {
		return m.Self
	}
	return nil
}

func (m *UBM) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UBM) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UBM_OneofMarshaler, _UBM_OneofUnmarshaler, _UBM_OneofSizer, []interface{}{
		(*UBM_Message)(nil),
	}
}

func _UBM_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UBM)
	// content
	switch x := m.Content.(type) {
	case *UBM_Message:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Message); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UBM.Content has unexpected type %T", x)
	}
	return nil
}

func _UBM_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UBM)
	switch tag {
	case 2: // content.message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Message)
		err := b.DecodeMessage(msg)
		m.Content = &UBM_Message{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UBM_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UBM)
	// content
	switch x := m.Content.(type) {
	case *UBM_Message:
		s := proto.Size(x.Message)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Message struct {
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From          *User  `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Chat          *Chat  `protobuf:"bytes,3,opt,name=chat,proto3" json:"chat,omitempty"`
	Cid           *CID   `protobuf:"bytes,4,opt,name=cid,proto3" json:"cid,omitempty"`
	IsMessageToMe bool   `protobuf:"varint,5,opt,name=is_message_to_me,json=isMessageToMe,proto3" json:"is_message_to_me,omitempty"`
	// Types that are valid to be assigned to ToId:
	//	*Message_ReplyId
	//	*Message_EditId
	//	*Message_DeleteId
	ToId isMessage_ToId `protobuf_oneof:"to_id"`
	Type string         `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are valid to be assigned to Content:
	//	*Message_RichText
	//	*Message_Sticker
	//	*Message_Voice
	//	*Message_Location
	Content              isMessage_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{1}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Message) GetFrom() *User {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Message) GetChat() *Chat {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *Message) GetCid() *CID {
	if m != nil {
		return m.Cid
	}
	return nil
}

func (m *Message) GetIsMessageToMe() bool {
	if m != nil {
		return m.IsMessageToMe
	}
	return false
}

type isMessage_ToId interface {
	isMessage_ToId()
}

type Message_ReplyId struct {
	ReplyId string `protobuf:"bytes,6,opt,name=reply_id,json=replyId,proto3,oneof"`
}

type Message_EditId struct {
	EditId string `protobuf:"bytes,7,opt,name=edit_id,json=editId,proto3,oneof"`
}

type Message_DeleteId struct {
	DeleteId string `protobuf:"bytes,8,opt,name=delete_id,json=deleteId,proto3,oneof"`
}

func (*Message_ReplyId) isMessage_ToId() {}

func (*Message_EditId) isMessage_ToId() {}

func (*Message_DeleteId) isMessage_ToId() {}

func (m *Message) GetToId() isMessage_ToId {
	if m != nil {
		return m.ToId
	}
	return nil
}

func (m *Message) GetReplyId() string {
	if x, ok := m.GetToId().(*Message_ReplyId); ok {
		return x.ReplyId
	}
	return ""
}

func (m *Message) GetEditId() string {
	if x, ok := m.GetToId().(*Message_EditId); ok {
		return x.EditId
	}
	return ""
}

func (m *Message) GetDeleteId() string {
	if x, ok := m.GetToId().(*Message_DeleteId); ok {
		return x.DeleteId
	}
	return ""
}

func (m *Message) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type isMessage_Content interface {
	isMessage_Content()
}

type Message_RichText struct {
	RichText *RichText `protobuf:"bytes,10,opt,name=rich_text,json=richText,proto3,oneof"`
}

type Message_Sticker struct {
	Sticker *Sticker `protobuf:"bytes,11,opt,name=sticker,proto3,oneof"`
}

type Message_Voice struct {
	Voice *Voice `protobuf:"bytes,12,opt,name=voice,proto3,oneof"`
}

type Message_Location struct {
	Location *Location `protobuf:"bytes,13,opt,name=location,proto3,oneof"`
}

func (*Message_RichText) isMessage_Content() {}

func (*Message_Sticker) isMessage_Content() {}

func (*Message_Voice) isMessage_Content() {}

func (*Message_Location) isMessage_Content() {}

func (m *Message) GetContent() isMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Message) GetRichText() *RichText {
	if x, ok := m.GetContent().(*Message_RichText); ok {
		return x.RichText
	}
	return nil
}

func (m *Message) GetSticker() *Sticker {
	if x, ok := m.GetContent().(*Message_Sticker); ok {
		return x.Sticker
	}
	return nil
}

func (m *Message) GetVoice() *Voice {
	if x, ok := m.GetContent().(*Message_Voice); ok {
		return x.Voice
	}
	return nil
}

func (m *Message) GetLocation() *Location {
	if x, ok := m.GetContent().(*Message_Location); ok {
		return x.Location
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Message) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Message_OneofMarshaler, _Message_OneofUnmarshaler, _Message_OneofSizer, []interface{}{
		(*Message_ReplyId)(nil),
		(*Message_EditId)(nil),
		(*Message_DeleteId)(nil),
		(*Message_RichText)(nil),
		(*Message_Sticker)(nil),
		(*Message_Voice)(nil),
		(*Message_Location)(nil),
	}
}

func _Message_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Message)
	// to_id
	switch x := m.ToId.(type) {
	case *Message_ReplyId:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ReplyId)
	case *Message_EditId:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.EditId)
	case *Message_DeleteId:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.DeleteId)
	case nil:
	default:
		return fmt.Errorf("Message.ToId has unexpected type %T", x)
	}
	// content
	switch x := m.Content.(type) {
	case *Message_RichText:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RichText); err != nil {
			return err
		}
	case *Message_Sticker:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sticker); err != nil {
			return err
		}
	case *Message_Voice:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Voice); err != nil {
			return err
		}
	case *Message_Location:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Location); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Message.Content has unexpected type %T", x)
	}
	return nil
}

func _Message_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Message)
	switch tag {
	case 6: // to_id.reply_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ToId = &Message_ReplyId{x}
		return true, err
	case 7: // to_id.edit_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ToId = &Message_EditId{x}
		return true, err
	case 8: // to_id.delete_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ToId = &Message_DeleteId{x}
		return true, err
	case 10: // content.rich_text
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RichText)
		err := b.DecodeMessage(msg)
		m.Content = &Message_RichText{msg}
		return true, err
	case 11: // content.sticker
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Sticker)
		err := b.DecodeMessage(msg)
		m.Content = &Message_Sticker{msg}
		return true, err
	case 12: // content.voice
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Voice)
		err := b.DecodeMessage(msg)
		m.Content = &Message_Voice{msg}
		return true, err
	case 13: // content.location
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Location)
		err := b.DecodeMessage(msg)
		m.Content = &Message_Location{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Message_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Message)
	// to_id
	switch x := m.ToId.(type) {
	case *Message_ReplyId:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ReplyId)))
		n += len(x.ReplyId)
	case *Message_EditId:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.EditId)))
		n += len(x.EditId)
	case *Message_DeleteId:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.DeleteId)))
		n += len(x.DeleteId)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// content
	switch x := m.Content.(type) {
	case *Message_RichText:
		s := proto.Size(x.RichText)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Sticker:
		s := proto.Size(x.Sticker)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Voice:
		s := proto.Size(x.Voice)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Location:
		s := proto.Size(x.Location)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CID struct {
	Messenger            string   `protobuf:"bytes,1,opt,name=messenger,proto3" json:"messenger,omitempty"`
	ChatId               string   `protobuf:"bytes,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType             string   `protobuf:"bytes,3,opt,name=chat_type,json=chatType,proto3" json:"chat_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CID) Reset()         { *m = CID{} }
func (m *CID) String() string { return proto.CompactTextString(m) }
func (*CID) ProtoMessage()    {}
func (*CID) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{2}
}

func (m *CID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CID.Unmarshal(m, b)
}
func (m *CID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CID.Marshal(b, m, deterministic)
}
func (m *CID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CID.Merge(m, src)
}
func (m *CID) XXX_Size() int {
	return xxx_messageInfo_CID.Size(m)
}
func (m *CID) XXX_DiscardUnknown() {
	xxx_messageInfo_CID.DiscardUnknown(m)
}

var xxx_messageInfo_CID proto.InternalMessageInfo

func (m *CID) GetMessenger() string {
	if m != nil {
		return m.Messenger
	}
	return ""
}

func (m *CID) GetChatId() string {
	if m != nil {
		return m.ChatId
	}
	return ""
}

func (m *CID) GetChatType() string {
	if m != nil {
		return m.ChatType
	}
	return ""
}

type Chat struct {
	Cid                  *CID     `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chat) Reset()         { *m = Chat{} }
func (m *Chat) String() string { return proto.CompactTextString(m) }
func (*Chat) ProtoMessage()    {}
func (*Chat) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{3}
}

func (m *Chat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chat.Unmarshal(m, b)
}
func (m *Chat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chat.Marshal(b, m, deterministic)
}
func (m *Chat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chat.Merge(m, src)
}
func (m *Chat) XXX_Size() int {
	return xxx_messageInfo_Chat.Size(m)
}
func (m *Chat) XXX_DiscardUnknown() {
	xxx_messageInfo_Chat.DiscardUnknown(m)
}

var xxx_messageInfo_Chat proto.InternalMessageInfo

func (m *Chat) GetCid() *CID {
	if m != nil {
		return m.Cid
	}
	return nil
}

func (m *Chat) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Chat) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type UID struct {
	Messenger            string   `protobuf:"bytes,1,opt,name=messenger,proto3" json:"messenger,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UID) Reset()         { *m = UID{} }
func (m *UID) String() string { return proto.CompactTextString(m) }
func (*UID) ProtoMessage()    {}
func (*UID) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{4}
}

func (m *UID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UID.Unmarshal(m, b)
}
func (m *UID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UID.Marshal(b, m, deterministic)
}
func (m *UID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UID.Merge(m, src)
}
func (m *UID) XXX_Size() int {
	return xxx_messageInfo_UID.Size(m)
}
func (m *UID) XXX_DiscardUnknown() {
	xxx_messageInfo_UID.DiscardUnknown(m)
}

var xxx_messageInfo_UID proto.InternalMessageInfo

func (m *UID) GetMessenger() string {
	if m != nil {
		return m.Messenger
	}
	return ""
}

func (m *UID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UID) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type User struct {
	Uid                  *UID     `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	PrivateChat          *CID     `protobuf:"bytes,5,opt,name=private_chat,json=privateChat,proto3" json:"private_chat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{5}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUid() *UID {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *User) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetPrivateChat() *CID {
	if m != nil {
		return m.PrivateChat
	}
	return nil
}

type RichText struct {
	Elements             []*RichTextElement `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RichText) Reset()         { *m = RichText{} }
func (m *RichText) String() string { return proto.CompactTextString(m) }
func (*RichText) ProtoMessage()    {}
func (*RichText) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{6}
}

func (m *RichText) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RichText.Unmarshal(m, b)
}
func (m *RichText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RichText.Marshal(b, m, deterministic)
}
func (m *RichText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RichText.Merge(m, src)
}
func (m *RichText) XXX_Size() int {
	return xxx_messageInfo_RichText.Size(m)
}
func (m *RichText) XXX_DiscardUnknown() {
	xxx_messageInfo_RichText.DiscardUnknown(m)
}

var xxx_messageInfo_RichText proto.InternalMessageInfo

func (m *RichText) GetElements() []*RichTextElement {
	if m != nil {
		return m.Elements
	}
	return nil
}

type RichTextElement struct {
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are valid to be assigned to Content:
	//	*RichTextElement_Text
	//	*RichTextElement_At
	//	*RichTextElement_Image
	Content              isRichTextElement_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RichTextElement) Reset()         { *m = RichTextElement{} }
func (m *RichTextElement) String() string { return proto.CompactTextString(m) }
func (*RichTextElement) ProtoMessage()    {}
func (*RichTextElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{7}
}

func (m *RichTextElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RichTextElement.Unmarshal(m, b)
}
func (m *RichTextElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RichTextElement.Marshal(b, m, deterministic)
}
func (m *RichTextElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RichTextElement.Merge(m, src)
}
func (m *RichTextElement) XXX_Size() int {
	return xxx_messageInfo_RichTextElement.Size(m)
}
func (m *RichTextElement) XXX_DiscardUnknown() {
	xxx_messageInfo_RichTextElement.DiscardUnknown(m)
}

var xxx_messageInfo_RichTextElement proto.InternalMessageInfo

func (m *RichTextElement) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type isRichTextElement_Content interface {
	isRichTextElement_Content()
}

type RichTextElement_Text struct {
	Text string `protobuf:"bytes,2,opt,name=text,proto3,oneof"`
}

type RichTextElement_At struct {
	At *At `protobuf:"bytes,3,opt,name=at,proto3,oneof"`
}

type RichTextElement_Image struct {
	Image *Image `protobuf:"bytes,4,opt,name=image,proto3,oneof"`
}

func (*RichTextElement_Text) isRichTextElement_Content() {}

func (*RichTextElement_At) isRichTextElement_Content() {}

func (*RichTextElement_Image) isRichTextElement_Content() {}

func (m *RichTextElement) GetContent() isRichTextElement_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *RichTextElement) GetText() string {
	if x, ok := m.GetContent().(*RichTextElement_Text); ok {
		return x.Text
	}
	return ""
}

func (m *RichTextElement) GetAt() *At {
	if x, ok := m.GetContent().(*RichTextElement_At); ok {
		return x.At
	}
	return nil
}

func (m *RichTextElement) GetImage() *Image {
	if x, ok := m.GetContent().(*RichTextElement_Image); ok {
		return x.Image
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RichTextElement) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RichTextElement_OneofMarshaler, _RichTextElement_OneofUnmarshaler, _RichTextElement_OneofSizer, []interface{}{
		(*RichTextElement_Text)(nil),
		(*RichTextElement_At)(nil),
		(*RichTextElement_Image)(nil),
	}
}

func _RichTextElement_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RichTextElement)
	// content
	switch x := m.Content.(type) {
	case *RichTextElement_Text:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Text)
	case *RichTextElement_At:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.At); err != nil {
			return err
		}
	case *RichTextElement_Image:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Image); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RichTextElement.Content has unexpected type %T", x)
	}
	return nil
}

func _RichTextElement_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RichTextElement)
	switch tag {
	case 2: // content.text
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Content = &RichTextElement_Text{x}
		return true, err
	case 3: // content.at
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(At)
		err := b.DecodeMessage(msg)
		m.Content = &RichTextElement_At{msg}
		return true, err
	case 4: // content.image
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Image)
		err := b.DecodeMessage(msg)
		m.Content = &RichTextElement_Image{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RichTextElement_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RichTextElement)
	// content
	switch x := m.Content.(type) {
	case *RichTextElement_Text:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Text)))
		n += len(x.Text)
	case *RichTextElement_At:
		s := proto.Size(x.At)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RichTextElement_Image:
		s := proto.Size(x.Image)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type At struct {
	Uid                  *UID     `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *At) Reset()         { *m = At{} }
func (m *At) String() string { return proto.CompactTextString(m) }
func (*At) ProtoMessage()    {}
func (*At) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{8}
}

func (m *At) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_At.Unmarshal(m, b)
}
func (m *At) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_At.Marshal(b, m, deterministic)
}
func (m *At) XXX_Merge(src proto.Message) {
	xxx_messageInfo_At.Merge(m, src)
}
func (m *At) XXX_Size() int {
	return xxx_messageInfo_At.Size(m)
}
func (m *At) XXX_DiscardUnknown() {
	xxx_messageInfo_At.DiscardUnknown(m)
}

var xxx_messageInfo_At proto.InternalMessageInfo

func (m *At) GetUid() *UID {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *At) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type Image struct {
	Messenger            string   `protobuf:"bytes,1,opt,name=messenger,proto3" json:"messenger,omitempty"`
	Format               string   `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Url                  string   `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	FileId               string   `protobuf:"bytes,7,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FileSize             int32    `protobuf:"varint,8,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{9}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetMessenger() string {
	if m != nil {
		return m.Messenger
	}
	return ""
}

func (m *Image) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Image) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Image) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Image) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Image) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Image) GetFileId() string {
	if m != nil {
		return m.FileId
	}
	return ""
}

func (m *Image) GetFileSize() int32 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

type Sticker struct {
	Messenger            string   `protobuf:"bytes,1,opt,name=messenger,proto3" json:"messenger,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	PackId               string   `protobuf:"bytes,3,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
	Image                *Image   `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sticker) Reset()         { *m = Sticker{} }
func (m *Sticker) String() string { return proto.CompactTextString(m) }
func (*Sticker) ProtoMessage()    {}
func (*Sticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{10}
}

func (m *Sticker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sticker.Unmarshal(m, b)
}
func (m *Sticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sticker.Marshal(b, m, deterministic)
}
func (m *Sticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sticker.Merge(m, src)
}
func (m *Sticker) XXX_Size() int {
	return xxx_messageInfo_Sticker.Size(m)
}
func (m *Sticker) XXX_DiscardUnknown() {
	xxx_messageInfo_Sticker.DiscardUnknown(m)
}

var xxx_messageInfo_Sticker proto.InternalMessageInfo

func (m *Sticker) GetMessenger() string {
	if m != nil {
		return m.Messenger
	}
	return ""
}

func (m *Sticker) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Sticker) GetPackId() string {
	if m != nil {
		return m.PackId
	}
	return ""
}

func (m *Sticker) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type Voice struct {
	Messenger            string   `protobuf:"bytes,1,opt,name=messenger,proto3" json:"messenger,omitempty"`
	Format               string   `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Duration             int32    `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Url                  string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	FileId               string   `protobuf:"bytes,6,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FileSize             int32    `protobuf:"varint,7,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Voice) Reset()         { *m = Voice{} }
func (m *Voice) String() string { return proto.CompactTextString(m) }
func (*Voice) ProtoMessage()    {}
func (*Voice) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{11}
}

func (m *Voice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Voice.Unmarshal(m, b)
}
func (m *Voice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Voice.Marshal(b, m, deterministic)
}
func (m *Voice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Voice.Merge(m, src)
}
func (m *Voice) XXX_Size() int {
	return xxx_messageInfo_Voice.Size(m)
}
func (m *Voice) XXX_DiscardUnknown() {
	xxx_messageInfo_Voice.DiscardUnknown(m)
}

var xxx_messageInfo_Voice proto.InternalMessageInfo

func (m *Voice) GetMessenger() string {
	if m != nil {
		return m.Messenger
	}
	return ""
}

func (m *Voice) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Voice) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Voice) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Voice) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Voice) GetFileId() string {
	if m != nil {
		return m.FileId
	}
	return ""
}

func (m *Voice) GetFileSize() int32 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

type Location struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Latitude             float64  `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Title                string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb019ebff1e530ad, []int{12}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Location) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func init() {
	proto.RegisterType((*UBM)(nil), "ubmapi.UBM")
	proto.RegisterType((*Message)(nil), "ubmapi.Message")
	proto.RegisterType((*CID)(nil), "ubmapi.CID")
	proto.RegisterType((*Chat)(nil), "ubmapi.Chat")
	proto.RegisterType((*UID)(nil), "ubmapi.UID")
	proto.RegisterType((*User)(nil), "ubmapi.User")
	proto.RegisterType((*RichText)(nil), "ubmapi.RichText")
	proto.RegisterType((*RichTextElement)(nil), "ubmapi.RichTextElement")
	proto.RegisterType((*At)(nil), "ubmapi.At")
	proto.RegisterType((*Image)(nil), "ubmapi.Image")
	proto.RegisterType((*Sticker)(nil), "ubmapi.Sticker")
	proto.RegisterType((*Voice)(nil), "ubmapi.Voice")
	proto.RegisterType((*Location)(nil), "ubmapi.Location")
}

func init() { proto.RegisterFile("types/ubm-api/ubmapi.proto", fileDescriptor_cb019ebff1e530ad) }

var fileDescriptor_cb019ebff1e530ad = []byte{
	// 867 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xff, 0x6e, 0xdc, 0x44,
	0x10, 0xae, 0x7f, 0xdb, 0x73, 0x17, 0x1a, 0xad, 0x2a, 0x62, 0x92, 0x46, 0x3a, 0x8c, 0x10, 0x27,
	0x21, 0x52, 0x29, 0x7d, 0x00, 0xd4, 0xa4, 0xa0, 0x3b, 0x89, 0x80, 0xb4, 0x4d, 0x90, 0xf8, 0x03,
	0x59, 0x5b, 0xef, 0x5e, 0x6e, 0x55, 0xfb, 0x6c, 0xd9, 0xeb, 0xd2, 0xf4, 0x05, 0xf8, 0x83, 0xd7,
	0x81, 0x67, 0xe0, 0x19, 0x78, 0x1b, 0x34, 0xbb, 0x6b, 0xe7, 0x72, 0x69, 0xa9, 0x80, 0xbf, 0xce,
	0xf3, 0x7d, 0xa3, 0x9d, 0x6f, 0x67, 0xbe, 0x9d, 0x83, 0x43, 0x75, 0xd3, 0x88, 0xee, 0x49, 0xff,
	0xb2, 0xfa, 0x8a, 0x35, 0x12, 0x7f, 0x59, 0x23, 0x4f, 0x9a, 0xb6, 0x56, 0x35, 0x09, 0x4d, 0x94,
	0xfd, 0xea, 0x80, 0x77, 0x75, 0x76, 0x41, 0x08, 0xf8, 0x98, 0x9d, 0x3a, 0x33, 0x67, 0x9e, 0x50,
	0xfd, 0x4d, 0xbe, 0x84, 0xa8, 0x12, 0x5d, 0xc7, 0xae, 0x45, 0xea, 0xce, 0x9c, 0xf9, 0xe4, 0xf4,
	0xe1, 0x89, 0x3d, 0xe3, 0xc2, 0xc0, 0x8b, 0x07, 0x74, 0xc8, 0x20, 0x33, 0xf0, 0x3b, 0x51, 0xae,
	0x52, 0x4f, 0x67, 0x4e, 0x87, 0xcc, 0xab, 0x4e, 0xb4, 0x54, 0x33, 0x58, 0x82, 0x33, 0x25, 0x52,
	0x7f, 0xe6, 0xcc, 0x3d, 0xaa, 0xbf, 0xcf, 0x12, 0x88, 0x8a, 0x7a, 0xa3, 0xc4, 0x46, 0x65, 0x7f,
	0x79, 0x10, 0xd9, 0x73, 0xc9, 0x47, 0xe0, 0x4a, 0x6e, 0xb5, 0xb8, 0x92, 0xe3, 0xe1, 0xab, 0xb6,
	0xae, 0xac, 0x8c, 0x9d, 0xc3, 0x91, 0xc1, 0x8c, 0x62, 0xcd, 0xd4, 0x6e, 0xf9, 0xf3, 0x35, 0x53,
	0x54, 0x33, 0xe4, 0x18, 0xbc, 0x42, 0x72, 0x5d, 0x7d, 0x72, 0x3a, 0x19, 0x13, 0x96, 0xcf, 0x29,
	0xe2, 0xe4, 0x0b, 0xd8, 0x97, 0x5d, 0x6e, 0x6f, 0x93, 0xab, 0x3a, 0xaf, 0x44, 0x1a, 0xcc, 0x9c,
	0x79, 0x4c, 0xf7, 0x64, 0x67, 0x75, 0x5d, 0xd6, 0x17, 0x82, 0x1c, 0x41, 0xdc, 0x8a, 0xa6, 0xbc,
	0xc9, 0x25, 0x4f, 0x43, 0x54, 0x88, 0x5d, 0xd0, 0xc8, 0x92, 0x93, 0x4f, 0x20, 0x12, 0x5c, 0x2a,
	0xe4, 0x22, 0xcb, 0x85, 0x08, 0x2c, 0x39, 0x39, 0x86, 0x84, 0x8b, 0x52, 0x28, 0x81, 0x64, 0x6c,
	0xc9, 0xd8, 0x40, 0x4b, 0x3e, 0x0e, 0x20, 0xd9, 0x1a, 0xc0, 0x13, 0x48, 0x5a, 0x59, 0xac, 0x73,
	0x25, 0xde, 0xa8, 0x14, 0xb4, 0xf0, 0xfd, 0x41, 0x38, 0x95, 0xc5, 0xfa, 0x52, 0xbc, 0x51, 0x0b,
	0x87, 0xc6, 0xad, 0xfd, 0xc6, 0x89, 0x75, 0x4a, 0x16, 0xaf, 0x44, 0x9b, 0x4e, 0xee, 0x4e, 0xec,
	0x85, 0x81, 0x17, 0x0e, 0x1d, 0x32, 0xc8, 0xe7, 0x10, 0xbc, 0xae, 0x65, 0x21, 0xd2, 0xa9, 0x4e,
	0xdd, 0x1b, 0x52, 0x7f, 0x44, 0x70, 0xe1, 0x50, 0xc3, 0x92, 0x13, 0x88, 0xcb, 0xba, 0x60, 0x4a,
	0xd6, 0x9b, 0x74, 0xef, 0xae, 0x86, 0xef, 0x2c, 0x8e, 0x1a, 0x86, 0x9c, 0xb3, 0x08, 0x02, 0x55,
	0xe7, 0x92, 0x6f, 0xcf, 0xf6, 0x27, 0xf0, 0xce, 0x97, 0xcf, 0xc9, 0x63, 0x48, 0xb0, 0xc1, 0x62,
	0x73, 0x2d, 0x5a, 0x3b, 0xdd, 0x5b, 0x80, 0x1c, 0x40, 0x84, 0x83, 0xc2, 0xf6, 0xb8, 0x9a, 0x0b,
	0x31, 0x5c, 0x72, 0x72, 0x04, 0x89, 0x26, 0x74, 0x7f, 0x3c, 0x4d, 0xc5, 0x08, 0x5c, 0xde, 0x34,
	0x22, 0xfb, 0x19, 0xfc, 0xf3, 0xad, 0xf1, 0x3a, 0xef, 0x19, 0xef, 0x23, 0x08, 0x94, 0x54, 0xa5,
	0xb0, 0x47, 0x9b, 0x80, 0xcc, 0x60, 0xc2, 0x45, 0x57, 0xb4, 0xb2, 0xd1, 0xd7, 0x33, 0x67, 0x6f,
	0x43, 0xd9, 0x0f, 0xe0, 0x5d, 0x7d, 0x50, 0xb9, 0xb1, 0xab, 0x3b, 0xda, 0xf5, 0x10, 0xe2, 0xbe,
	0x13, 0xed, 0x86, 0x55, 0xa3, 0xde, 0x21, 0xce, 0x7e, 0x77, 0xc0, 0x47, 0xdf, 0xa2, 0xe0, 0xfe,
	0xbe, 0xe0, 0x2b, 0x14, 0xdc, 0x4b, 0x4e, 0x3e, 0x85, 0x29, 0x97, 0x5d, 0x53, 0xb2, 0x9b, 0x5c,
	0x9f, 0xe3, 0x5a, 0x6d, 0x06, 0xfb, 0x9e, 0x55, 0x82, 0x1c, 0x03, 0xac, 0x64, 0xdb, 0xa9, 0x7c,
	0xab, 0x50, 0xa2, 0x11, 0x4d, 0x1f, 0x41, 0x52, 0xb2, 0x81, 0xf5, 0x8d, 0x0c, 0x04, 0x34, 0x79,
	0x02, 0xd3, 0xa6, 0x95, 0xaf, 0x99, 0x12, 0xb9, 0x7e, 0x37, 0xc1, 0xfd, 0xbe, 0x4d, 0x6c, 0x02,
	0xb6, 0x37, 0xfb, 0x1a, 0xe2, 0xc1, 0x71, 0xe4, 0x29, 0xc4, 0xa2, 0x14, 0x95, 0xd8, 0xa8, 0x2e,
	0x75, 0x66, 0xde, 0x7c, 0x72, 0x7a, 0xb0, 0xeb, 0xca, 0x6f, 0x0c, 0x4f, 0xc7, 0xc4, 0xec, 0x37,
	0x07, 0x1e, 0xee, 0xb0, 0xef, 0x5c, 0x3a, 0x8f, 0xc0, 0xd7, 0x76, 0x77, 0xed, 0x0b, 0xd1, 0x11,
	0x79, 0x0c, 0xee, 0xf8, 0xb8, 0x61, 0x28, 0xf6, 0x4c, 0x2d, 0x1e, 0x50, 0x97, 0x29, 0x74, 0xb2,
	0xac, 0x70, 0x4d, 0xf9, 0x77, 0x9d, 0xbc, 0xac, 0xcc, 0x92, 0x32, 0xec, 0xb6, 0x21, 0xbf, 0x05,
	0xf7, 0x99, 0xfa, 0xff, 0x23, 0xc8, 0xfe, 0x74, 0x20, 0xd0, 0x55, 0x3e, 0xe0, 0x90, 0x8f, 0x21,
	0x5c, 0xd5, 0x6d, 0xc5, 0xd4, 0x60, 0x6d, 0x13, 0xa1, 0x2d, 0x7f, 0x91, 0x5c, 0xad, 0xf5, 0xd5,
	0x02, 0x6a, 0x02, 0xcc, 0x5e, 0x0b, 0x79, 0xbd, 0x56, 0xfa, 0x42, 0x01, 0xb5, 0x91, 0xdd, 0xa0,
	0x4c, 0x0f, 0x6b, 0xaa, 0x37, 0x28, 0x23, 0xfb, 0xe0, 0xf5, 0x6d, 0x69, 0x36, 0x11, 0xc5, 0x4f,
	0x7c, 0x47, 0x2b, 0x59, 0x8a, 0x71, 0x07, 0xd1, 0x10, 0x43, 0xf3, 0x8e, 0x34, 0xd1, 0xc9, 0xb7,
	0x42, 0x6f, 0xa0, 0x80, 0xc6, 0x08, 0xbc, 0x90, 0x6f, 0x45, 0xd6, 0x43, 0x64, 0x77, 0xc4, 0xbf,
	0x34, 0xfb, 0x01, 0x44, 0x0d, 0x2b, 0x5e, 0x61, 0x39, 0x63, 0xc1, 0x10, 0xc3, 0x25, 0x27, 0x9f,
	0xfd, 0xd3, 0x54, 0xec, 0x4c, 0xb2, 0x3f, 0x1c, 0x08, 0xf4, 0xc2, 0xf9, 0x8f, 0x0d, 0x3c, 0x84,
	0x98, 0xf7, 0x2d, 0x1b, 0x9f, 0x6f, 0x40, 0xc7, 0x78, 0x6c, 0x97, 0x7f, 0xbf, 0x5d, 0xc1, 0x3b,
	0xdb, 0x15, 0xbe, 0xbf, 0x5d, 0xd1, 0x4e, 0xbb, 0x14, 0xc4, 0xc3, 0xf6, 0x23, 0xe9, 0xe8, 0x2b,
	0xab, 0x7b, 0x08, 0x51, 0x5d, 0xc9, 0x94, 0x54, 0x3d, 0x37, 0xee, 0xc1, 0x3d, 0x69, 0x63, 0xbc,
	0x6f, 0x59, 0x6f, 0xae, 0x0d, 0xe9, 0x69, 0xf2, 0x16, 0xb8, 0xdd, 0x57, 0xfe, 0xd6, 0xbe, 0x7a,
	0x19, 0xea, 0x3f, 0xef, 0xa7, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x55, 0x84, 0xe9, 0xda,
	0x07, 0x00, 0x00,
}
